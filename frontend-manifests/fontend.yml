apiVersion: apps/v1
kind: Deployment
metadata:
  name: react-app
spec:
  replicas: 1
  selector:
    matchLabels:
     app: react-app
  template:
    metadata:
      labels:
        app: react-app
    spec:
      containers:
      - name: react-app
        image: ninjaops/frontend:16
        imagePullPolicy: Always
        # resources:
        #   limits:
        #     memory: "128Mi"
        #     cpu: "500m"
        ports:
          - containerPort: 80
          - containerPort: 443
        volumeMounts:
          - name: tls-vol
            mountPath: /etc/ssl/certs
            readOnly: true
        env:
          - name: TLS_CERT_PATH
            value: "/etc/ssl/certs/tls.crt"
          - name: TLS_KEY_PATH
            value: "/etc/ssl/certs/tls.key"
          - name: REACT_APP_SERVER_BASE_URL
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: REACT_APP_SERVER_BASE_URL
          - name: REACT_APP_WS_BASE_URL
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: REACT_APP_WS_BASE_URL
          - name: PUBLIC_URL
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: PUBLIC_URL
          - name: NODE_ENV
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: NODE_ENV
      volumes:
        - name: tls-vol
          secret:
            secretName: tls-secret

---
apiVersion: v1
kind: Service
metadata:
 name: react-app
spec:
  type: NodePort
  selector:
    app: react-app
  ports:
    - name: http
      port: 80    # Expose port 80 internally within the cluster
      targetPort: 80
      nodePort: 31000  # NodePort for HTTP (optional, adjust as needed)
    - name: https
      port: 443   # Expose port 443 internally within the cluster for HTTPS
      targetPort: 443   # Nginx in the container listens on port 80
      nodePort: 31001  # NodePort for HTTPS (adjust as needed)